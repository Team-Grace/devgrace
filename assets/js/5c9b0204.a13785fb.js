"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6331],{6164:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(5721);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(n),f=c,b=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(b,i(i({ref:t},p),{},{components:n})):r.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=n.length,i=new Array(o);i[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[u]="string"==typeof e?e:c,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=n(6529),c=(n(5721),n(6164));const o={},i="pick",a={unversionedId:"utils/object/pick",id:"utils/object/pick",title:"pick",description:"A function that returns an object consisting of the keys given as arguments. The returned object is a new deeply copied object.",source:"@site/docs/utils/object/pick.md",sourceDirName:"utils/object",slug:"/utils/object/pick",permalink:"/devgrace/docs/utils/object/pick",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"omit",permalink:"/devgrace/docs/utils/object/omit"},next:{title:"countSubstringOccurrences",permalink:"/devgrace/docs/utils/string/countSubstringOccurrences"}},s={},l=[{value:"Interface",id:"interface",level:2},{value:"Usage",id:"usage",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,c.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"pick"},"pick"),(0,c.kt)("p",null,"A function that returns an object consisting of the ",(0,c.kt)("inlineCode",{parentName:"p"},"keys")," given as arguments. The returned object is ",(0,c.kt)("inlineCode",{parentName:"p"},"a new deeply copied object"),"."),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"symbol")," is excluded."),(0,c.kt)("br",null),(0,c.kt)("h2",{id:"interface"},"Interface"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-tsx"},"type ObjectKeys<T extends Record<PropertyKey, T[keyof T]>> = Exclude<\n  keyof T,\n  symbol\n>;\n\nconst pick: <\n  T extends Record<PropertyKey, T[keyof T]>,\n  K extends ObjectKeys<T>\n>(\n  obj: T,\n  keys: K | K[]\n) => Pick<Record<ObjectKeys<T>, T[ObjectKeys<T>]>, K>;\n")),(0,c.kt)("h2",{id:"usage"},"Usage"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { pick } from '@devgrace/utils';\n\nconst pickedObj1 = pick({ a: 1, b: 2, c: 3 }, 'b'); // { b: 2 }\nconst pickedObj2 = pick({ a: 1, b: 2, c: 3 }, ['a', 'c']); // { a: 1, c: 3 }\n")))}d.isMDXComponent=!0}}]);