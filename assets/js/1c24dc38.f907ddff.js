"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3899],{6164:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(5721);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),m=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=m(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(r),d=a,f=c["".concat(u,".").concat(d)]||c[d]||p[d]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5718:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var n=r(6529),a=(r(5721),r(6164));const o={},i="isValidPhoneNumberFormat",l={unversionedId:"utils/validator/isValidPhoneNumberFormat",id:"utils/validator/isValidPhoneNumberFormat",title:"isValidPhoneNumberFormat",description:"a function to check if the given string is in the form of a phone number with -(hyphen).",source:"@site/docs/utils/validator/isValidPhoneNumberFormat.md",sourceDirName:"utils/validator",slug:"/utils/validator/isValidPhoneNumberFormat",permalink:"/devgrace/docs/utils/validator/isValidPhoneNumberFormat",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"isValidEmail",permalink:"/devgrace/docs/utils/validator/isValidEmail"},next:{title:"Button",permalink:"/devgrace/docs/ui/Button"}},u={},m=[{value:"Interface",id:"interface",level:2},{value:"Usage",id:"usage",level:2}],s={toc:m},c="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"isvalidphonenumberformat"},"isValidPhoneNumberFormat"),(0,a.kt)("p",null,"a function to check if the given string is in the form of a phone number with ",(0,a.kt)("inlineCode",{parentName:"p"},"-(hyphen)"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XXX-YYY-ZZZZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XXX-YYYY-ZZZZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XX-YYY-ZZZZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XX-YYYY-ZZZZ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"XXXX-YYYY"))),(0,a.kt)("p",null,"We don't strictly check to see if they match the actual phone numbering system. "),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"interface"},"Interface"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const isValidPhoneNumberFormat: (value: string) => boolean\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { isValidPhoneNumberFormat, formatPhoneNumber } from '@devgrace/utils';\n\nconst isPhoneNumberFormat1 = isValidPhoneNumberFormat('010-1234-1234'); // true\nconst isPhoneNumberFormat2 = isValidPhoneNumberFormat('031-123-1234'); // true\nconst isPhoneNumberFormat3 = isValidPhoneNumberFormat('02-123-1234'); // true\nconst isPhoneNumberFormat4 = isValidPhoneNumberFormat('02-1234-1234'); // true\n\nconst isPhoneNumberFormat5 = isValidPhoneNumberFormat('0-1234-1234'); // false\nconst isPhoneNumberFormat6 = isValidPhoneNumberFormat('010-12455-1234'); // false\n\nconst isPhoneNumberFormat7 = isValidPhoneNumberFormat(formatPhoneNumber('01012341234')); // true\nconst isPhoneNumberFormat8 = isValidPhoneNumberFormat(formatPhoneNumber('021231234')); // true\nconst isPhoneNumberFormat9 = isValidPhoneNumberFormat(formatPhoneNumber('010-1234-1234')); // true\n")))}p.isMDXComponent=!0}}]);