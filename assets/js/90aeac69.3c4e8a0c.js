"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4017],{6875:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>i,frontMatter:()=>n,metadata:()=>c,toc:()=>u});var a=r(2082),s=r(289);const n={},o="usePreservedState",c={id:"react/hooks/usePreservedState",title:"usePreservedState",description:"A custom hook that changes the state when the value changes when compared with comparator.",source:"@site/docs/react/hooks/usePreservedState.mdx",sourceDirName:"react/hooks",slug:"/react/hooks/usePreservedState",permalink:"/devgrace/docs/react/hooks/usePreservedState",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"usePreservedCallback",permalink:"/devgrace/docs/react/hooks/usePreservedCallback"},next:{title:"usePrevious",permalink:"/devgrace/docs/react/hooks/usePrevious"}},d={},u=[{value:"Interface",id:"interface",level:2},{value:"Usage",id:"usage",level:2},{value:"Default Comparator",id:"default-comparator",level:3},{value:"Custom Comparator",id:"custom-comparator",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"usepreservedstate",children:"usePreservedState"}),"\n",(0,a.jsxs)(t.p,{children:["A custom hook that changes the state when the value changes when compared with ",(0,a.jsx)(t.code,{children:"comparator"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["If no comparator is passed, the ",(0,a.jsx)(t.code,{children:"deepEqual"})," function in ",(0,a.jsx)(t.code,{children:"@devgrace/utils"})," is utilized."]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"https://team-grace.github.io/devgrace/ko/docs/utils/common/deepEqual/",children:"deepEqual"})}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["If the return value of the comparator is ",(0,a.jsx)(t.code,{children:"true"})," so that the state does not change, the reference is also kept."]}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(t.h2,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"const usePreservedState: <T>(\n  value: T,\n  comparator?: ((source: T, target: T) => boolean) | undefined\n) => T;\n"})}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(t.h3,{id:"default-comparator",children:"Default Comparator"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import React, { useEffect, useState } from "react";\nimport { usePreservedState } from "@devgrace/react";\n\nconst Example = () => {\n  const preservedState = usePreservedState({ exampleId: 1 }); // The preservedState reference is retained when the component is re-rendered.\n\n  return  <>{/* ... */}</>;\n}\n'})}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(t.h3,{id:"custom-comparator",children:"Custom Comparator"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"import React, { useEffect, useState } from 'react';\nimport { usePreservedState } from '@devgrace/react';\n\nconst Example = () => {\n  const comparator = (\n    source: { exampleId: number },\n    target: { exampleId: number }\n  ) => source.exampleId === target.exampleId;\n\n  const preservedState = usePreservedState({ exampleId: 1 }, comparator);\n  \n  return <>{/* ... */}</>;\n};\n\n"})})]})}function i(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},289:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>o});var a=r(8290);const s={},n=a.createContext(s);function o(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);