"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5497],{6164:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(5721);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(r),m=o,d=f["".concat(i,".").concat(m)]||f[m]||p[m]||a;return r?n.createElement(d,c(c({ref:t},l),{},{components:r})):n.createElement(d,c({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[f]="string"==typeof e?e:o,c[1]=s;for(var u=2;u<a;u++)c[u]=r[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8447:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(6529),o=(r(5721),r(6164));const a={},c="useMergeRefs",s={unversionedId:"react/hooks/useMergeRefs",id:"react/hooks/useMergeRefs",title:"useMergeRefs",description:"A custom hook that can be utilized to merge multiple refs given as arguments into one.",source:"@site/docs/react/hooks/useMergeRefs.mdx",sourceDirName:"react/hooks",slug:"/react/hooks/useMergeRefs",permalink:"/devgrace/docs/react/hooks/useMergeRefs",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useIsomorphicLayoutEffect",permalink:"/devgrace/docs/react/hooks/useIsomorphicLayoutEffect"},next:{title:"useOnClickOutside",permalink:"/devgrace/docs/react/hooks/useOnClickOutside"}},i={},u=[{value:"Interface",id:"interface",level:2},{value:"Usage",id:"usage",level:2}],l={toc:u},f="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usemergerefs"},"useMergeRefs"),(0,o.kt)("p",null,"A custom hook that can be utilized to merge multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"ref"),"s given as arguments into one."),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"interface"},"Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const useMergeRefs: <T = any>(\n  ...refs: (React.MutableRefObject<T> | React.LegacyRef<T>)[]\n) => (instance: T | null) => void;\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import React, { forwardRef, useRef } from 'react';\nimport { useMergeRefs } from '@devgrace/react';\n\ninterface Props {\n  /* ... */\n}\n\nconst Example = forwardRef<HTMLDivElement, Props>((props, ref) => {\n  const childRef = useRef<HTMLDivElement | null>(null);\n\n  return <div ref={useMergeRefs(childRef, ref)}>{/* ... */}</div>;\n});\n")))}p.isMDXComponent=!0}}]);